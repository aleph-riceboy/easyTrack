// Felix, Eric Donner
// 2024/05/30
// Easy Track Inventory Application
// View window

package easytrack;
import java.util.ArrayList;
public class EasyTrackView extends javax.swing.JFrame {
    
    EasyTrackMainMenu EasyTrackMainMenu;

    /**
     * Creates new form EasyTrackSearch
     */
    public EasyTrackView(EasyTrackMainMenu m) {
        initComponents();
        EasyTrackMainMenu = m;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        backButton = new javax.swing.JButton();
        viewTitleLabel = new javax.swing.JLabel();
        sortByLabel = new javax.swing.JLabel();
        hardwareTypeComboBox = new javax.swing.JComboBox<>();
        locationComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultTextArea = new javax.swing.JTextArea();
        applyChangesButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 700));
        setMinimumSize(new java.awt.Dimension(1200, 700));

        backButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        backButton.setText("Return to Menu");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        viewTitleLabel.setText("View Inventory");

        sortByLabel.setText("Sort by:");

        hardwareTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Server", "Desktop", "Laptop", "Thin Client", "Monitor", "Firewall", "Wireless Access Point", "Network Switch", "UPS", "Printer/Copier", "Scanner", "Timeclock", "Tape Drive", "SAN", "Fiber Switch", "All Hardware Types" }));

        locationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mid-Range", "Toronto", "St. John's", "Montreal", "Calgary", "Winnipeg", "Surrey", "IT Storage", "Employee's Home", "All Locations" }));
        locationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Search Results:");

        searchResultTextArea.setColumns(20);
        searchResultTextArea.setRows(5);
        jScrollPane1.setViewportView(searchResultTextArea);

        applyChangesButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        applyChangesButton.setText("Apply Changes");
        applyChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyChangesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sortByLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hardwareTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(viewTitleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(applyChangesButton)
                        .addGap(159, 159, 159)
                        .addComponent(backButton)))
                .addGap(285, 285, 285))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(viewTitleLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sortByLabel)
                            .addComponent(hardwareTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(applyChangesButton))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // go back to main menu
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        EasyTrackMainMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void locationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationComboBoxActionPerformed
    /**
     * Search list for items that match the given location
     * @param list - array list of inventory to search
     * @param location - location searching by
     * @return - String containing details of all hardware that matches the search
     */
    public static String getList(ArrayList<Hardware> list,int location){
        String output="";
        int location1;
        //loop for list size
        for(int i=0;i<list.size();i++){
            if(location<9){//if searching by specific location
                //get location of hardware item at index i in list
                location1=list.get(i).getLocation();
                //if the locations are the same
                if(location1==location){
                    //add hardware object to output lsit
                    output=output+"\n\n"+list.get(i).toString();
                }
            }else{//if searching by all locations
                //add hardware object to output list
                output=output+"\n\n"+list.get(i).toString();
            }
        }
        return output;
    }
    private void applyChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyChangesButtonActionPerformed
        //get selected index of hardware type combo box
        int type=hardwareTypeComboBox.getSelectedIndex();
        //get selected index of location combo box
        int location=locationComboBox.getSelectedIndex();
        //declare hardware array list
        ArrayList<Hardware> list;
        //assign list based on the integer from the hardware type combo box
        if(type==0){
            list=EasyTrackMainMenu.getServers();
        }else if(type==1){
            list=EasyTrackMainMenu.getDesktops();
        }else if(type==2){
            list=EasyTrackMainMenu.getLaptops();
        }else if(type==3){
            list=EasyTrackMainMenu.getThinClients();
        }else if(type==4){
            list=EasyTrackMainMenu.getMonitors();
        }else if(type==5){
            list=EasyTrackMainMenu.getFirewalls();
        }else if(type==6){
            list=EasyTrackMainMenu.getWap();
        }else if(type==7){
            list=EasyTrackMainMenu.getNetworkSwitch();
        }else if(type==8){
            list=EasyTrackMainMenu.getUps();
        }else if(type==9){
            list=EasyTrackMainMenu.getPrinters();
        }else if(type==10){
            list=EasyTrackMainMenu.getScanners();
        }else if(type==11){
            list=EasyTrackMainMenu.getTimeClocks();
        }else if(type==12){
            list=EasyTrackMainMenu.getTapeDrive();
        }else if(type==13){
            list=EasyTrackMainMenu.getSan();
        }else if(type==14){
            list=EasyTrackMainMenu.getFiberSwitch();
        }else{
            list=EasyTrackMainMenu.getInventory();
        }
        //set search result text as the sorted 
        searchResultTextArea.setText(getList(list,location));
    }//GEN-LAST:event_applyChangesButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyChangesButton;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> hardwareTypeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> locationComboBox;
    private javax.swing.JTextArea searchResultTextArea;
    private javax.swing.JLabel sortByLabel;
    private javax.swing.JLabel viewTitleLabel;
    // End of variables declaration//GEN-END:variables
}
